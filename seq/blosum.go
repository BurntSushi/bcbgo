package seq

func getSim62(a, b Residue) int {
	ai, ok := alpha62map[a]
	if !ok {
		ai = alpha62map['X']
	}
	bi, ok := alpha62map[b]
	if !ok {
		bi = alpha62map['X']
	}
	return blosum62[ai][bi]
}

const alpha62 = "ABCDEFGHIKLMNPQRSTVWXYZ-"

var alpha62map = make(map[Residue]int)

func init() {
	for i, r := range alpha62 {
		alpha62map[Residue(r)] = i
	}
}

// The indices correspond to alpha62, and can be retrieved using the
// alpha62map. The last element in each column/row is the gap penalty.
var blosum62 = [24][24]int{
	{
		4.0, -2.0, 0.0, -2.0, -1.0, -2.0, 0.0, -2.0, -1.0, -1.0, -1.0, -1.0,
		-2.0, -1.0, -1.0, -1.0, 1.0, 0.0, 0.0, -3.0, 0.0, -2.0, -1.0, -4.0,
	},
	{
		-2.0, 4.0, -3.0, 4.0, 1.0, -3.0, -1.0, 0.0, -3.0, 0.0, -4.0, -3.0, 3.0,
		-2.0, 0.0, -1.0, 0.0, -1.0, -3.0, -4.0, -1.0, -3.0, 1.0, -4.0,
	},
	{
		0.0, -3.0, 9.0, -3.0, -4.0, -2.0, -3.0, -3.0, -1.0, -3.0, -1.0, -1.0,
		-3.0, -3.0, -3.0, -3.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -3.0, -4.0,
	},
	{
		-2.0, 4.0, -3.0, 6.0, 2.0, -3.0, -1.0, -1.0, -3.0, -1.0, -4.0, -3.0,
		1.0, -1.0, 0.0, -2.0, 0.0, -1.0, -3.0, -4.0, -1.0, -3.0, 1.0, -4.0,
	},
	{
		-1.0, 1.0, -4.0, 2.0, 5.0, -3.0, -2.0, 0.0, -3.0, 1.0, -3.0, -2.0, 0.0,
		-1.0, 2.0, 0.0, 0.0, -1.0, -2.0, -3.0, -1.0, -2.0, 4.0, -4.0,
	},
	{
		-2.0, -3.0, -2.0, -3.0, -3.0, 6.0, -3.0, -1.0, 0.0, -3.0, 0.0, 0.0,
		-3.0, -4.0, -3.0, -3.0, -2.0, -2.0, -1.0, 1.0, -1.0, 3.0, -3.0, -4.0,
	},
	{
		0.0, -1.0, -3.0, -1.0, -2.0, -3.0, 6.0, -2.0, -4.0, -2.0, -4.0, -3.0,
		0.0, -2.0, -2.0, -2.0, 0.0, -2.0, -3.0, -2.0, -1.0, -3.0, -2.0, -4.0,
	},
	{
		-2.0, 0.0, -3.0, -1.0, 0.0, -1.0, -2.0, 8.0, -3.0, -1.0, -3.0, -2.0,
		1.0, -2.0, 0.0, 0.0, -1.0, -2.0, -3.0, -2.0, -1.0, 2.0, 0.0, -4.0,
	},
	{
		-1.0, -3.0, -1.0, -3.0, -3.0, 0.0, -4.0, -3.0, 4.0, -3.0, 2.0, 1.0,
		-3.0, -3.0, -3.0, -3.0, -2.0, -1.0, 3.0, -3.0, -1.0, -1.0, -3.0, -4.0,
	},
	{
		-1.0, 0.0, -3.0, -1.0, 1.0, -3.0, -2.0, -1.0, -3.0, 5.0, -2.0, -1.0,
		0.0, -1.0, 1.0, 2.0, 0.0, -1.0, -2.0, -3.0, -1.0, -2.0, 1.0, -4.0,
	},
	{
		-1.0, -4.0, -1.0, -4.0, -3.0, 0.0, -4.0, -3.0, 2.0, -2.0, 4.0, 2.0,
		-3.0, -3.0, -2.0, -2.0, -2.0, -1.0, 1.0, -2.0, -1.0, -1.0, -3.0, -4.0,
	},
	{
		-1.0, -3.0, -1.0, -3.0, -2.0, 0.0, -3.0, -2.0, 1.0, -1.0, 2.0, 5.0,
		-2.0, -2.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -4.0,
	},
	{
		-2.0, 3.0, -3.0, 1.0, 0.0, -3.0, 0.0, 1.0, -3.0, 0.0, -3.0, -2.0, 6.0,
		-2.0, 0.0, 0.0, 1.0, 0.0, -3.0, -4.0, -1.0, -2.0, 0.0, -4.0,
	},
	{
		-1.0, -2.0, -3.0, -1.0, -1.0, -4.0, -2.0, -2.0, -3.0, -1.0, -3.0, -2.0,
		-2.0, 7.0, -1.0, -2.0, -1.0, -1.0, -2.0, -4.0, -2.0, -3.0, -1.0, -4.0,
	},
	{
		-1.0, 0.0, -3.0, 0.0, 2.0, -3.0, -2.0, 0.0, -3.0, 1.0, -2.0, 0.0, 0.0,
		-1.0, 5.0, 1.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, 3.0, -4.0,
	},
	{
		-1.0, -1.0, -3.0, -2.0, 0.0, -3.0, -2.0, 0.0, -3.0, 2.0, -2.0, -1.0,
		0.0, -2.0, 1.0, 5.0, -1.0, -1.0, -3.0, -3.0, -1.0, -2.0, 0.0, -4.0,
	},
	{
		1.0, 0.0, -1.0, 0.0, 0.0, -2.0, 0.0, -1.0, -2.0, 0.0, -2.0, -1.0, 1.0,
		-1.0, 0.0, -1.0, 4.0, 1.0, -2.0, -3.0, 0.0, -2.0, 0.0, -4.0,
	},
	{
		0.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0,
		0.0, -1.0, -1.0, -1.0, 1.0, 5.0, 0.0, -2.0, 0.0, -2.0, -1.0, -4.0,
	},
	{
		0.0, -3.0, -1.0, -3.0, -2.0, -1.0, -3.0, -3.0, 3.0, -2.0, 1.0, 1.0,
		-3.0, -2.0, -2.0, -3.0, -2.0, 0.0, 4.0, -3.0, -1.0, -1.0, -2.0, -4.0,
	},
	{
		-3.0, -4.0, -2.0, -4.0, -3.0, 1.0, -2.0, -2.0, -3.0, -3.0, -2.0, -1.0,
		-4.0, -4.0, -2.0, -3.0, -3.0, -2.0, -3.0, 11.0, -2.0, 2.0, -3.0, -4.0,
	},
	{
		0.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
		-1.0, -2.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, -1.0, -4.0,
	},
	{
		-2.0, -3.0, -2.0, -3.0, -2.0, 3.0, -3.0, 2.0, -1.0, -2.0, -1.0, -1.0,
		-2.0, -3.0, -1.0, -2.0, -2.0, -2.0, -1.0, 2.0, -1.0, 7.0, -2.0, -4.0,
	},
	{
		-1.0, 1.0, -3.0, 1.0, 4.0, -3.0, -2.0, 0.0, -3.0, 1.0, -3.0, -1.0, 0.0,
		-1.0, 3.0, 0.0, 0.0, -1.0, -2.0, -3.0, -1.0, -2.0, 4.0, -4.0,
	},
	{
		-4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0,
		-4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, 0.0,
	},
}
