package fragbag

import (
	"fmt"
	"testing"
)

var (
	libpath = "../data/fraglibs/centers400_11"

	library  *Library
	oldstyle []string
	newstyle []BOW
)

func init() {
	var err error
	library, err = NewLibrary(libpath)
	if err != nil {
		panic(fmt.Sprintf("Could not initialize fragment library at path "+
			"'%s' because: %s.", libpath, err))
	}

	oldstyle = []string{
		"aaaaa",
		"126#258#386#",
		"abcdefYZ#52#53#54#abcdef",
	}
	newstyle = []BOW{
		library.NewBowMap(map[int]int16{0: 5}),
		library.NewBowMap(map[int]int16{
			126: 1, 258: 1, 386: 1,
		}),
		library.NewBowMap(map[int]int16{
			0: 2, 1: 2, 2: 2, 3: 2, 4: 2, 5: 2,
			50: 1, 51: 1, 52: 1, 53: 1, 54: 1,
		}),
	}
}

func TestOldStyleRead(t *testing.T) {
	for i, test := range oldstyle {
		oldBow, err := library.NewOldStyleBow(test)
		if err != nil {
			t.Fatalf("The old style string '%s' could not be parsed: %s",
				test, err)
		}
		if !oldBow.Equal(newstyle[i]) {
			t.Fatalf("The BOW '%s' generated by '%s' is not equivalent to "+
				"'%s'.", oldBow, test, newstyle[i])
		}
	}
}

func TestOldStyleWrite(t *testing.T) {
	for i, test := range newstyle {
		oldStr := test.StringOldStyle()
		oldBow, err := library.NewOldStyleBow(oldStr)
		if err != nil {
			t.Fatalf("The old style string '%s' could not be parsed: %s",
				oldStr, err)
		}
		if !oldBow.Equal(test) {
			t.Fatalf("The old style string '%s' generated by '%s' is not "+
				"equivalent to '%s'.", oldStr, test, newstyle[i])
		}
	}
}
